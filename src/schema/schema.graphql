# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddSeriesRequestType {
  title: String!
  description: String!
  contents: String!
}

input AddTeamRequestType {
  title: String!
  description: String!
  category: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LoginRequestType {
  email: String!
  password: String!
}

type LoginResponseType {
  jwt: String!
  user: User!
}

type Mutation {
  login(req: LoginRequestType!): LoginResponseType
  createUser(data: SignupRequestType!): User!
  updateUser(data: UpdateUserRequest!, id: ObjectId!): User!
  deleteUser(id: ObjectId!): String!
  createTeam(data: AddTeamRequestType!): Team!
  updateTeam(data: UpdateTeamRequestType!, id: ObjectId!): Team!
  deleteTeam(id: ObjectId!): String!
  createSeries(data: AddSeriesRequestType!): Series!
  updateSeries(data: updateSeriesRequestType!, id: ObjectId!): Series!
  deleteSeries(id: ObjectId!): String!
}

"""Bson ObjectId unique identifier (hexadecimal string)."""
scalar ObjectId

type Post {
  id: ObjectId!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  contents: String!
  cover_Img: String!
  image_url: [String!]!
  views: Int!
  category: String!
  comments: [String!]!
  followUser: [String!]!
  series: String!
  postedBy: String!
  tags: [String!]!
}

type Query {
  getUserById(id: ObjectId!): User!
  getTeamById(id: ObjectId!): Team!
  getSeriesById(id: ObjectId!): Series!
  getUsersByTeam(id: ObjectId!): [User!]!
}

type Series {
  id: ObjectId!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  contents: String!
  posts: [String!]!
}

input SignupRequestType {
  email: String!
  password: String!
  name: String!
  phone: String!
  address: String!
  birth: String!
  image_url: String!
}

type Team {
  id: ObjectId!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  adminId: String!
  users: [String!]!
  category: String!
}

input updateSeriesRequestType {
  title: String
  description: String
  contents: String
}

input UpdateTeamRequestType {
  title: String
  description: String
  category: String
}

input UpdateUserRequest {
  email: String
  password: String
  name: String
  phone: String
  address: String
  birth: String
  image_url: String
}

type User {
  id: ObjectId!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  name: String!
  phone: String!
  address: String!
  birth: String!
  image_url: String!
  point: Int!
  level: Int!
  check_Found: Boolean!
  position: [Float!]!
  favorites: [String!]!
  friendsId: [String!]!
  blackListId: [String!]!
  likePostsId: [String!]!
  posts: [String!]!
  teams: [String!]!
  token: String!
  role: UserRole!
}

"""Identifies user access level"""
enum UserRole {
  Admin
  Guest
  Regular
}
